Terminals unused in grammar

   TOKEN_FALSE
   TOKEN_TRUE
   TOKEN_WHILE
   TOKEN_INTEGER_LITERAL
   TOKEN_CHARACTER_LITERAL
   TOKEN_STRING_LITERAL
   TOKEN_INC
   TOKEN_DEC
   TOKEN_NEG
   TOKEN_POW
   TOKEN_MULT
   TOKEN_DIV
   TOKEN_MOD
   TOKEN_ADD
   TOKEN_LT
   TOKEN_LE
   TOKEN_GT
   TOKEN_GE
   TOKEN_EQ_COMP
   TOKEN_NE_COMP
   TOKEN_AND
   TOKEN_OR
   TOKEN_CPP_COMMENT
   TOKEN_C_COMMENT
   TOKEN_WS
   TOKEN_OTHER
   TOKEN_EOF


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl_list decl
    3          | %empty

    4 decl: ident TOKEN_COLON TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RBRACE
    5     | ident TOKEN_COLON type TOKEN_SC
    6     | ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RBRACE

    7 type: TOKEN_STRING
    8     | TOKEN_CHARACTER
    9     | TOKEN_INTEGER
   10     | TOKEN_BOOLEAN
   11     | TOKEN_VOID
   12     | TOKEN_ARRAY TOKEN_LBRACK optional_expression TOKEN_RBRACK type
   13     | TOKEN_FCALL type TOKEN_LPAREN param_list TOKEN_RPAREN

   14 stmt_list: stmt
   15          | stmt_list stmt

   16 stmt: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN matched_stmt TOKEN_ELSE stmt
   17     | TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN stmt
   18     | decl
   19     | print_stmt
   20     | expression TOKEN_SC
   21     | return_stmt
   22     | TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN stmt
   23     | TOKEN_LBRACE stmt_list TOKEN_RBRACE

   24 matched_stmt: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN matched_stmt TOKEN_ELSE matched_stmt
   25             | decl
   26             | return_stmt
   27             | print_stmt
   28             | expression TOKEN_SC
   29             | TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN matched_stmt
   30             | TOKEN_LBRACE stmt_list TOKEN_RBRACE

   31 return_stmt: TOKEN_RETURN expression TOKEN_SC

   32 print_stmt: TOKEN_PRINT expression_list TOKEN_SC

   33 param_list: non_empty_param_list param
   34           | param
   35           | %empty

   36 non_empty_param_list: param TOKEN_COMMA

   37 param: ident TOKEN_COLON type

   38 expression_list: expression
   39                | %empty

   40 optional_expression: expression
   41                    | %empty

   42 expression: TOKEN_IDENT

   43 ident: TOKEN_IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_ARRAY (258) 12
TOKEN_BOOLEAN (259) 10
TOKEN_CHARACTER (260) 8
TOKEN_ELSE (261) 16 24
TOKEN_FALSE (262)
TOKEN_FOR (263) 22 29
TOKEN_FCALL (264) 13
TOKEN_IF (265) 16 17 24
TOKEN_INTEGER (266) 9
TOKEN_PRINT (267) 32
TOKEN_RETURN (268) 31
TOKEN_STRING (269) 7
TOKEN_TRUE (270)
TOKEN_VOID (271) 11
TOKEN_WHILE (272)
TOKEN_IDENT (273) 42 43
TOKEN_INTEGER_LITERAL (274)
TOKEN_CHARACTER_LITERAL (275)
TOKEN_STRING_LITERAL (276)
TOKEN_LBRACK (277) 12
TOKEN_RBRACK (278) 12
TOKEN_LBRACE (279) 4 6 23 30
TOKEN_RBRACE (280) 4 6 23 30
TOKEN_LPAREN (281) 13 16 17 22 24 29
TOKEN_RPAREN (282) 13 16 17 22 24 29
TOKEN_INC (283)
TOKEN_DEC (284)
TOKEN_NEG (285)
TOKEN_POW (286)
TOKEN_MULT (287)
TOKEN_DIV (288)
TOKEN_MOD (289)
TOKEN_ADD (290)
TOKEN_LT (291)
TOKEN_LE (292)
TOKEN_GT (293)
TOKEN_GE (294)
TOKEN_EQ_COMP (295)
TOKEN_NE_COMP (296)
TOKEN_AND (297)
TOKEN_OR (298)
TOKEN_ASSIGN (299) 4 6
TOKEN_CPP_COMMENT (300)
TOKEN_C_COMMENT (301)
TOKEN_COMMA (302) 36
TOKEN_COLON (303) 4 5 6 37
TOKEN_SC (304) 5 20 22 28 29 31 32
TOKEN_WS (305)
TOKEN_OTHER (306)
TOKEN_EOF (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
decl_list (55)
    on left: 2 3, on right: 1 2
decl (56)
    on left: 4 5 6, on right: 2 18 25
type (57)
    on left: 7 8 9 10 11 12 13, on right: 5 6 12 13 37
stmt_list (58)
    on left: 14 15, on right: 4 6 15 23 30
stmt (59)
    on left: 16 17 18 19 20 21 22 23, on right: 14 15 16 17 22
matched_stmt (60)
    on left: 24 25 26 27 28 29 30, on right: 16 24 29
return_stmt (61)
    on left: 31, on right: 21 26
print_stmt (62)
    on left: 32, on right: 19 27
param_list (63)
    on left: 33 34 35, on right: 13
non_empty_param_list (64)
    on left: 36, on right: 33
param (65)
    on left: 37, on right: 33 34 36
expression_list (66)
    on left: 38 39, on right: 32
optional_expression (67)
    on left: 40 41, on right: 12
expression (68)
    on left: 42, on right: 16 17 20 22 24 28 29 31 38 40
ident (69)
    on left: 43, on right: 4 5 6 37


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (decl_list)

    program    go to state 1
    decl_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: decl_list .
    2 decl_list: decl_list . decl

    TOKEN_IDENT  shift, and go to state 4

    $default  reduce using rule 1 (program)

    decl   go to state 5
    ident  go to state 6


State 3

    0 $accept: program $end .

    $default  accept


State 4

   43 ident: TOKEN_IDENT .

    $default  reduce using rule 43 (ident)


State 5

    2 decl_list: decl_list decl .

    $default  reduce using rule 2 (decl_list)


State 6

    4 decl: ident . TOKEN_COLON TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RBRACE
    5     | ident . TOKEN_COLON type TOKEN_SC
    6     | ident . TOKEN_COLON type TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RBRACE

    TOKEN_COLON  shift, and go to state 7


State 7

    4 decl: ident TOKEN_COLON . TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RBRACE
    5     | ident TOKEN_COLON . type TOKEN_SC
    6     | ident TOKEN_COLON . type TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RBRACE

    TOKEN_ARRAY      shift, and go to state 8
    TOKEN_BOOLEAN    shift, and go to state 9
    TOKEN_CHARACTER  shift, and go to state 10
    TOKEN_FCALL      shift, and go to state 11
    TOKEN_INTEGER    shift, and go to state 12
    TOKEN_STRING     shift, and go to state 13
    TOKEN_VOID       shift, and go to state 14
    TOKEN_ASSIGN     shift, and go to state 15

    type  go to state 16


State 8

   12 type: TOKEN_ARRAY . TOKEN_LBRACK optional_expression TOKEN_RBRACK type

    TOKEN_LBRACK  shift, and go to state 17


State 9

   10 type: TOKEN_BOOLEAN .

    $default  reduce using rule 10 (type)


State 10

    8 type: TOKEN_CHARACTER .

    $default  reduce using rule 8 (type)


State 11

   13 type: TOKEN_FCALL . type TOKEN_LPAREN param_list TOKEN_RPAREN

    TOKEN_ARRAY      shift, and go to state 8
    TOKEN_BOOLEAN    shift, and go to state 9
    TOKEN_CHARACTER  shift, and go to state 10
    TOKEN_FCALL      shift, and go to state 11
    TOKEN_INTEGER    shift, and go to state 12
    TOKEN_STRING     shift, and go to state 13
    TOKEN_VOID       shift, and go to state 14

    type  go to state 18


State 12

    9 type: TOKEN_INTEGER .

    $default  reduce using rule 9 (type)


State 13

    7 type: TOKEN_STRING .

    $default  reduce using rule 7 (type)


State 14

   11 type: TOKEN_VOID .

    $default  reduce using rule 11 (type)


State 15

    4 decl: ident TOKEN_COLON TOKEN_ASSIGN . TOKEN_LBRACE stmt_list TOKEN_RBRACE

    TOKEN_LBRACE  shift, and go to state 19


State 16

    5 decl: ident TOKEN_COLON type . TOKEN_SC
    6     | ident TOKEN_COLON type . TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RBRACE

    TOKEN_ASSIGN  shift, and go to state 20
    TOKEN_SC      shift, and go to state 21


State 17

   12 type: TOKEN_ARRAY TOKEN_LBRACK . optional_expression TOKEN_RBRACK type

    TOKEN_IDENT  shift, and go to state 22

    $default  reduce using rule 41 (optional_expression)

    optional_expression  go to state 23
    expression           go to state 24


State 18

   13 type: TOKEN_FCALL type . TOKEN_LPAREN param_list TOKEN_RPAREN

    TOKEN_LPAREN  shift, and go to state 25


State 19

    4 decl: ident TOKEN_COLON TOKEN_ASSIGN TOKEN_LBRACE . stmt_list TOKEN_RBRACE

    TOKEN_FOR     shift, and go to state 26
    TOKEN_IF      shift, and go to state 27
    TOKEN_PRINT   shift, and go to state 28
    TOKEN_RETURN  shift, and go to state 29
    TOKEN_IDENT   shift, and go to state 30
    TOKEN_LBRACE  shift, and go to state 31

    decl         go to state 32
    stmt_list    go to state 33
    stmt         go to state 34
    return_stmt  go to state 35
    print_stmt   go to state 36
    expression   go to state 37
    ident        go to state 6


State 20

    6 decl: ident TOKEN_COLON type TOKEN_ASSIGN . TOKEN_LBRACE stmt_list TOKEN_RBRACE

    TOKEN_LBRACE  shift, and go to state 38


State 21

    5 decl: ident TOKEN_COLON type TOKEN_SC .

    $default  reduce using rule 5 (decl)


State 22

   42 expression: TOKEN_IDENT .

    $default  reduce using rule 42 (expression)


State 23

   12 type: TOKEN_ARRAY TOKEN_LBRACK optional_expression . TOKEN_RBRACK type

    TOKEN_RBRACK  shift, and go to state 39


State 24

   40 optional_expression: expression .

    $default  reduce using rule 40 (optional_expression)


State 25

   13 type: TOKEN_FCALL type TOKEN_LPAREN . param_list TOKEN_RPAREN

    TOKEN_IDENT  shift, and go to state 4

    $default  reduce using rule 35 (param_list)

    param_list            go to state 40
    non_empty_param_list  go to state 41
    param                 go to state 42
    ident                 go to state 43


State 26

   22 stmt: TOKEN_FOR . TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN stmt

    TOKEN_LPAREN  shift, and go to state 44


State 27

   16 stmt: TOKEN_IF . TOKEN_LPAREN expression TOKEN_RPAREN matched_stmt TOKEN_ELSE stmt
   17     | TOKEN_IF . TOKEN_LPAREN expression TOKEN_RPAREN stmt

    TOKEN_LPAREN  shift, and go to state 45


State 28

   32 print_stmt: TOKEN_PRINT . expression_list TOKEN_SC

    TOKEN_IDENT  shift, and go to state 22

    $default  reduce using rule 39 (expression_list)

    expression_list  go to state 46
    expression       go to state 47


State 29

   31 return_stmt: TOKEN_RETURN . expression TOKEN_SC

    TOKEN_IDENT  shift, and go to state 22

    expression  go to state 48


State 30

   42 expression: TOKEN_IDENT .
   43 ident: TOKEN_IDENT .

    TOKEN_COLON  reduce using rule 43 (ident)
    $default     reduce using rule 42 (expression)


State 31

   23 stmt: TOKEN_LBRACE . stmt_list TOKEN_RBRACE

    TOKEN_FOR     shift, and go to state 26
    TOKEN_IF      shift, and go to state 27
    TOKEN_PRINT   shift, and go to state 28
    TOKEN_RETURN  shift, and go to state 29
    TOKEN_IDENT   shift, and go to state 30
    TOKEN_LBRACE  shift, and go to state 31

    decl         go to state 32
    stmt_list    go to state 49
    stmt         go to state 34
    return_stmt  go to state 35
    print_stmt   go to state 36
    expression   go to state 37
    ident        go to state 6


State 32

   18 stmt: decl .

    $default  reduce using rule 18 (stmt)


State 33

    4 decl: ident TOKEN_COLON TOKEN_ASSIGN TOKEN_LBRACE stmt_list . TOKEN_RBRACE
   15 stmt_list: stmt_list . stmt

    TOKEN_FOR     shift, and go to state 26
    TOKEN_IF      shift, and go to state 27
    TOKEN_PRINT   shift, and go to state 28
    TOKEN_RETURN  shift, and go to state 29
    TOKEN_IDENT   shift, and go to state 30
    TOKEN_LBRACE  shift, and go to state 31
    TOKEN_RBRACE  shift, and go to state 50

    decl         go to state 32
    stmt         go to state 51
    return_stmt  go to state 35
    print_stmt   go to state 36
    expression   go to state 37
    ident        go to state 6


State 34

   14 stmt_list: stmt .

    $default  reduce using rule 14 (stmt_list)


State 35

   21 stmt: return_stmt .

    $default  reduce using rule 21 (stmt)


State 36

   19 stmt: print_stmt .

    $default  reduce using rule 19 (stmt)


State 37

   20 stmt: expression . TOKEN_SC

    TOKEN_SC  shift, and go to state 52


State 38

    6 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_LBRACE . stmt_list TOKEN_RBRACE

    TOKEN_FOR     shift, and go to state 26
    TOKEN_IF      shift, and go to state 27
    TOKEN_PRINT   shift, and go to state 28
    TOKEN_RETURN  shift, and go to state 29
    TOKEN_IDENT   shift, and go to state 30
    TOKEN_LBRACE  shift, and go to state 31

    decl         go to state 32
    stmt_list    go to state 53
    stmt         go to state 34
    return_stmt  go to state 35
    print_stmt   go to state 36
    expression   go to state 37
    ident        go to state 6


State 39

   12 type: TOKEN_ARRAY TOKEN_LBRACK optional_expression TOKEN_RBRACK . type

    TOKEN_ARRAY      shift, and go to state 8
    TOKEN_BOOLEAN    shift, and go to state 9
    TOKEN_CHARACTER  shift, and go to state 10
    TOKEN_FCALL      shift, and go to state 11
    TOKEN_INTEGER    shift, and go to state 12
    TOKEN_STRING     shift, and go to state 13
    TOKEN_VOID       shift, and go to state 14

    type  go to state 54


State 40

   13 type: TOKEN_FCALL type TOKEN_LPAREN param_list . TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 55


State 41

   33 param_list: non_empty_param_list . param

    TOKEN_IDENT  shift, and go to state 4

    param  go to state 56
    ident  go to state 43


State 42

   34 param_list: param .
   36 non_empty_param_list: param . TOKEN_COMMA

    TOKEN_COMMA  shift, and go to state 57

    $default  reduce using rule 34 (param_list)


State 43

   37 param: ident . TOKEN_COLON type

    TOKEN_COLON  shift, and go to state 58


State 44

   22 stmt: TOKEN_FOR TOKEN_LPAREN . expression TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN stmt

    TOKEN_IDENT  shift, and go to state 22

    expression  go to state 59


State 45

   16 stmt: TOKEN_IF TOKEN_LPAREN . expression TOKEN_RPAREN matched_stmt TOKEN_ELSE stmt
   17     | TOKEN_IF TOKEN_LPAREN . expression TOKEN_RPAREN stmt

    TOKEN_IDENT  shift, and go to state 22

    expression  go to state 60


State 46

   32 print_stmt: TOKEN_PRINT expression_list . TOKEN_SC

    TOKEN_SC  shift, and go to state 61


State 47

   38 expression_list: expression .

    $default  reduce using rule 38 (expression_list)


State 48

   31 return_stmt: TOKEN_RETURN expression . TOKEN_SC

    TOKEN_SC  shift, and go to state 62


State 49

   15 stmt_list: stmt_list . stmt
   23 stmt: TOKEN_LBRACE stmt_list . TOKEN_RBRACE

    TOKEN_FOR     shift, and go to state 26
    TOKEN_IF      shift, and go to state 27
    TOKEN_PRINT   shift, and go to state 28
    TOKEN_RETURN  shift, and go to state 29
    TOKEN_IDENT   shift, and go to state 30
    TOKEN_LBRACE  shift, and go to state 31
    TOKEN_RBRACE  shift, and go to state 63

    decl         go to state 32
    stmt         go to state 51
    return_stmt  go to state 35
    print_stmt   go to state 36
    expression   go to state 37
    ident        go to state 6


State 50

    4 decl: ident TOKEN_COLON TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RBRACE .

    $default  reduce using rule 4 (decl)


State 51

   15 stmt_list: stmt_list stmt .

    $default  reduce using rule 15 (stmt_list)


State 52

   20 stmt: expression TOKEN_SC .

    $default  reduce using rule 20 (stmt)


State 53

    6 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_LBRACE stmt_list . TOKEN_RBRACE
   15 stmt_list: stmt_list . stmt

    TOKEN_FOR     shift, and go to state 26
    TOKEN_IF      shift, and go to state 27
    TOKEN_PRINT   shift, and go to state 28
    TOKEN_RETURN  shift, and go to state 29
    TOKEN_IDENT   shift, and go to state 30
    TOKEN_LBRACE  shift, and go to state 31
    TOKEN_RBRACE  shift, and go to state 64

    decl         go to state 32
    stmt         go to state 51
    return_stmt  go to state 35
    print_stmt   go to state 36
    expression   go to state 37
    ident        go to state 6


State 54

   12 type: TOKEN_ARRAY TOKEN_LBRACK optional_expression TOKEN_RBRACK type .

    $default  reduce using rule 12 (type)


State 55

   13 type: TOKEN_FCALL type TOKEN_LPAREN param_list TOKEN_RPAREN .

    $default  reduce using rule 13 (type)


State 56

   33 param_list: non_empty_param_list param .

    $default  reduce using rule 33 (param_list)


State 57

   36 non_empty_param_list: param TOKEN_COMMA .

    $default  reduce using rule 36 (non_empty_param_list)


State 58

   37 param: ident TOKEN_COLON . type

    TOKEN_ARRAY      shift, and go to state 8
    TOKEN_BOOLEAN    shift, and go to state 9
    TOKEN_CHARACTER  shift, and go to state 10
    TOKEN_FCALL      shift, and go to state 11
    TOKEN_INTEGER    shift, and go to state 12
    TOKEN_STRING     shift, and go to state 13
    TOKEN_VOID       shift, and go to state 14

    type  go to state 65


State 59

   22 stmt: TOKEN_FOR TOKEN_LPAREN expression . TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN stmt

    TOKEN_SC  shift, and go to state 66


State 60

   16 stmt: TOKEN_IF TOKEN_LPAREN expression . TOKEN_RPAREN matched_stmt TOKEN_ELSE stmt
   17     | TOKEN_IF TOKEN_LPAREN expression . TOKEN_RPAREN stmt

    TOKEN_RPAREN  shift, and go to state 67


State 61

   32 print_stmt: TOKEN_PRINT expression_list TOKEN_SC .

    $default  reduce using rule 32 (print_stmt)


State 62

   31 return_stmt: TOKEN_RETURN expression TOKEN_SC .

    $default  reduce using rule 31 (return_stmt)


State 63

   23 stmt: TOKEN_LBRACE stmt_list TOKEN_RBRACE .

    $default  reduce using rule 23 (stmt)


State 64

    6 decl: ident TOKEN_COLON type TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RBRACE .

    $default  reduce using rule 6 (decl)


State 65

   37 param: ident TOKEN_COLON type .

    $default  reduce using rule 37 (param)


State 66

   22 stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC . expression TOKEN_SC expression TOKEN_RPAREN stmt

    TOKEN_IDENT  shift, and go to state 22

    expression  go to state 68


State 67

   16 stmt: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN . matched_stmt TOKEN_ELSE stmt
   17     | TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN . stmt

    TOKEN_FOR     shift, and go to state 69
    TOKEN_IF      shift, and go to state 70
    TOKEN_PRINT   shift, and go to state 28
    TOKEN_RETURN  shift, and go to state 29
    TOKEN_IDENT   shift, and go to state 30
    TOKEN_LBRACE  shift, and go to state 71

    decl          go to state 72
    stmt          go to state 73
    matched_stmt  go to state 74
    return_stmt   go to state 75
    print_stmt    go to state 76
    expression    go to state 77
    ident         go to state 6


State 68

   22 stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression . TOKEN_SC expression TOKEN_RPAREN stmt

    TOKEN_SC  shift, and go to state 78


State 69

   22 stmt: TOKEN_FOR . TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN stmt
   29 matched_stmt: TOKEN_FOR . TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN matched_stmt

    TOKEN_LPAREN  shift, and go to state 79


State 70

   16 stmt: TOKEN_IF . TOKEN_LPAREN expression TOKEN_RPAREN matched_stmt TOKEN_ELSE stmt
   17     | TOKEN_IF . TOKEN_LPAREN expression TOKEN_RPAREN stmt
   24 matched_stmt: TOKEN_IF . TOKEN_LPAREN expression TOKEN_RPAREN matched_stmt TOKEN_ELSE matched_stmt

    TOKEN_LPAREN  shift, and go to state 80


State 71

   23 stmt: TOKEN_LBRACE . stmt_list TOKEN_RBRACE
   30 matched_stmt: TOKEN_LBRACE . stmt_list TOKEN_RBRACE

    TOKEN_FOR     shift, and go to state 26
    TOKEN_IF      shift, and go to state 27
    TOKEN_PRINT   shift, and go to state 28
    TOKEN_RETURN  shift, and go to state 29
    TOKEN_IDENT   shift, and go to state 30
    TOKEN_LBRACE  shift, and go to state 31

    decl         go to state 32
    stmt_list    go to state 81
    stmt         go to state 34
    return_stmt  go to state 35
    print_stmt   go to state 36
    expression   go to state 37
    ident        go to state 6


State 72

   18 stmt: decl .
   25 matched_stmt: decl .

    TOKEN_ELSE  reduce using rule 25 (matched_stmt)
    $default    reduce using rule 18 (stmt)


State 73

   17 stmt: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN stmt .

    $default  reduce using rule 17 (stmt)


State 74

   16 stmt: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN matched_stmt . TOKEN_ELSE stmt

    TOKEN_ELSE  shift, and go to state 82


State 75

   21 stmt: return_stmt .
   26 matched_stmt: return_stmt .

    TOKEN_ELSE  reduce using rule 26 (matched_stmt)
    $default    reduce using rule 21 (stmt)


State 76

   19 stmt: print_stmt .
   27 matched_stmt: print_stmt .

    TOKEN_ELSE  reduce using rule 27 (matched_stmt)
    $default    reduce using rule 19 (stmt)


State 77

   20 stmt: expression . TOKEN_SC
   28 matched_stmt: expression . TOKEN_SC

    TOKEN_SC  shift, and go to state 83


State 78

   22 stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC . expression TOKEN_RPAREN stmt

    TOKEN_IDENT  shift, and go to state 22

    expression  go to state 84


State 79

   22 stmt: TOKEN_FOR TOKEN_LPAREN . expression TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN stmt
   29 matched_stmt: TOKEN_FOR TOKEN_LPAREN . expression TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN matched_stmt

    TOKEN_IDENT  shift, and go to state 22

    expression  go to state 85


State 80

   16 stmt: TOKEN_IF TOKEN_LPAREN . expression TOKEN_RPAREN matched_stmt TOKEN_ELSE stmt
   17     | TOKEN_IF TOKEN_LPAREN . expression TOKEN_RPAREN stmt
   24 matched_stmt: TOKEN_IF TOKEN_LPAREN . expression TOKEN_RPAREN matched_stmt TOKEN_ELSE matched_stmt

    TOKEN_IDENT  shift, and go to state 22

    expression  go to state 86


State 81

   15 stmt_list: stmt_list . stmt
   23 stmt: TOKEN_LBRACE stmt_list . TOKEN_RBRACE
   30 matched_stmt: TOKEN_LBRACE stmt_list . TOKEN_RBRACE

    TOKEN_FOR     shift, and go to state 26
    TOKEN_IF      shift, and go to state 27
    TOKEN_PRINT   shift, and go to state 28
    TOKEN_RETURN  shift, and go to state 29
    TOKEN_IDENT   shift, and go to state 30
    TOKEN_LBRACE  shift, and go to state 31
    TOKEN_RBRACE  shift, and go to state 87

    decl         go to state 32
    stmt         go to state 51
    return_stmt  go to state 35
    print_stmt   go to state 36
    expression   go to state 37
    ident        go to state 6


State 82

   16 stmt: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN matched_stmt TOKEN_ELSE . stmt

    TOKEN_FOR     shift, and go to state 26
    TOKEN_IF      shift, and go to state 27
    TOKEN_PRINT   shift, and go to state 28
    TOKEN_RETURN  shift, and go to state 29
    TOKEN_IDENT   shift, and go to state 30
    TOKEN_LBRACE  shift, and go to state 31

    decl         go to state 32
    stmt         go to state 88
    return_stmt  go to state 35
    print_stmt   go to state 36
    expression   go to state 37
    ident        go to state 6


State 83

   20 stmt: expression TOKEN_SC .
   28 matched_stmt: expression TOKEN_SC .

    TOKEN_ELSE  reduce using rule 28 (matched_stmt)
    $default    reduce using rule 20 (stmt)


State 84

   22 stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC expression . TOKEN_RPAREN stmt

    TOKEN_RPAREN  shift, and go to state 89


State 85

   22 stmt: TOKEN_FOR TOKEN_LPAREN expression . TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN stmt
   29 matched_stmt: TOKEN_FOR TOKEN_LPAREN expression . TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN matched_stmt

    TOKEN_SC  shift, and go to state 90


State 86

   16 stmt: TOKEN_IF TOKEN_LPAREN expression . TOKEN_RPAREN matched_stmt TOKEN_ELSE stmt
   17     | TOKEN_IF TOKEN_LPAREN expression . TOKEN_RPAREN stmt
   24 matched_stmt: TOKEN_IF TOKEN_LPAREN expression . TOKEN_RPAREN matched_stmt TOKEN_ELSE matched_stmt

    TOKEN_RPAREN  shift, and go to state 91


State 87

   23 stmt: TOKEN_LBRACE stmt_list TOKEN_RBRACE .
   30 matched_stmt: TOKEN_LBRACE stmt_list TOKEN_RBRACE .

    TOKEN_ELSE  reduce using rule 30 (matched_stmt)
    $default    reduce using rule 23 (stmt)


State 88

   16 stmt: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN matched_stmt TOKEN_ELSE stmt .

    $default  reduce using rule 16 (stmt)


State 89

   22 stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN . stmt

    TOKEN_FOR     shift, and go to state 26
    TOKEN_IF      shift, and go to state 27
    TOKEN_PRINT   shift, and go to state 28
    TOKEN_RETURN  shift, and go to state 29
    TOKEN_IDENT   shift, and go to state 30
    TOKEN_LBRACE  shift, and go to state 31

    decl         go to state 32
    stmt         go to state 92
    return_stmt  go to state 35
    print_stmt   go to state 36
    expression   go to state 37
    ident        go to state 6


State 90

   22 stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC . expression TOKEN_SC expression TOKEN_RPAREN stmt
   29 matched_stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC . expression TOKEN_SC expression TOKEN_RPAREN matched_stmt

    TOKEN_IDENT  shift, and go to state 22

    expression  go to state 93


State 91

   16 stmt: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN . matched_stmt TOKEN_ELSE stmt
   17     | TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN . stmt
   24 matched_stmt: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN . matched_stmt TOKEN_ELSE matched_stmt

    TOKEN_FOR     shift, and go to state 69
    TOKEN_IF      shift, and go to state 70
    TOKEN_PRINT   shift, and go to state 28
    TOKEN_RETURN  shift, and go to state 29
    TOKEN_IDENT   shift, and go to state 30
    TOKEN_LBRACE  shift, and go to state 71

    decl          go to state 72
    stmt          go to state 73
    matched_stmt  go to state 94
    return_stmt   go to state 75
    print_stmt    go to state 76
    expression    go to state 77
    ident         go to state 6


State 92

   22 stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN stmt .

    $default  reduce using rule 22 (stmt)


State 93

   22 stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression . TOKEN_SC expression TOKEN_RPAREN stmt
   29 matched_stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression . TOKEN_SC expression TOKEN_RPAREN matched_stmt

    TOKEN_SC  shift, and go to state 95


State 94

   16 stmt: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN matched_stmt . TOKEN_ELSE stmt
   24 matched_stmt: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN matched_stmt . TOKEN_ELSE matched_stmt

    TOKEN_ELSE  shift, and go to state 96


State 95

   22 stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC . expression TOKEN_RPAREN stmt
   29 matched_stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC . expression TOKEN_RPAREN matched_stmt

    TOKEN_IDENT  shift, and go to state 22

    expression  go to state 97


State 96

   16 stmt: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN matched_stmt TOKEN_ELSE . stmt
   24 matched_stmt: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN matched_stmt TOKEN_ELSE . matched_stmt

    TOKEN_FOR     shift, and go to state 69
    TOKEN_IF      shift, and go to state 70
    TOKEN_PRINT   shift, and go to state 28
    TOKEN_RETURN  shift, and go to state 29
    TOKEN_IDENT   shift, and go to state 30
    TOKEN_LBRACE  shift, and go to state 71

    decl          go to state 72
    stmt          go to state 88
    matched_stmt  go to state 98
    return_stmt   go to state 75
    print_stmt    go to state 76
    expression    go to state 77
    ident         go to state 6


State 97

   22 stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC expression . TOKEN_RPAREN stmt
   29 matched_stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC expression . TOKEN_RPAREN matched_stmt

    TOKEN_RPAREN  shift, and go to state 99


State 98

   24 matched_stmt: TOKEN_IF TOKEN_LPAREN expression TOKEN_RPAREN matched_stmt TOKEN_ELSE matched_stmt .

    $default  reduce using rule 24 (matched_stmt)


State 99

   22 stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN . stmt
   29 matched_stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN . matched_stmt

    TOKEN_FOR     shift, and go to state 69
    TOKEN_IF      shift, and go to state 70
    TOKEN_PRINT   shift, and go to state 28
    TOKEN_RETURN  shift, and go to state 29
    TOKEN_IDENT   shift, and go to state 30
    TOKEN_LBRACE  shift, and go to state 71

    decl          go to state 72
    stmt          go to state 92
    matched_stmt  go to state 100
    return_stmt   go to state 75
    print_stmt    go to state 76
    expression    go to state 77
    ident         go to state 6


State 100

   29 matched_stmt: TOKEN_FOR TOKEN_LPAREN expression TOKEN_SC expression TOKEN_SC expression TOKEN_RPAREN matched_stmt .

    $default  reduce using rule 29 (matched_stmt)
